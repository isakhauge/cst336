<section class="py-5 bg-primary">
	<div class="container text-center text-white">
		<h1>
			<span class="small">A JavaScript Game</span><br>
			Guess an integer number
		</h1>
		<h2 class="h5 font-weight-light mt-4">Created by Isak Hauge and Anders Bærø</h2>
	</div>
</section>
<section class="py-5">
	<div class="container">
		<div class="mb-5 text-center">
			<button id="btn-win-count" type="button" class="btn btn-secondary m-1">
				Number of games won<span id="txt-win-count" class="ml-3 badge badge-light">0</span>
			</button>
			<button id="btn-loss-count" type="button" class="btn btn-secondary m-1">
				Number of games lost<span id="txt-loss-count" class="ml-3 badge badge-light">0</span>
			</button>
		</div>
		<div class="row">
			<div class="col-md">
				<form action="">
					<div class="form-group">
						<label for="number" class="text-muted small">Enter a guess</label>
						<input type="text" id="number" name="number" class="form-control">
					</div>
					<div class="form-group">
						<button type="button" id="btn-submit" name="btn-submit" class="btn btn-primary">Submit guess</button>
						<button type="button" id="btn-reset" name="btn-reset" class="btn btn-secondary">Reset</button>
					</div>
					<div class="progress">
						<div id="progress-bar" class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0"></div>
					</div>
					<p id="guess-count" class="text-center small mt-2 text-secondary">7</p>
				</form>
			</div>
			<div class="col-md">
				<label for="log" class="text-muted small">Game log</label>
				<div id="log" name="log" class="bg-light p-2 border rounded"></div>
			</div>
		</div>
	</div>
	<div class="container">
		<hr class="my-5">
		<div id="info" class="alert alert-primary" role="alert">
			<h4 class="alert-heading">How to play the game</h4>
			<ul>
				<li>Guess an integer number between 1 and 99.</li>
				<li>Click the submit button and check the game log to see if your guess was correct.</li>
				<li>If your guess was correct or if you would like another shot, please click the reset button.</li>
			</ul>
			<hr>
			<p class="mb-0">Best of lucks!</p>
		</div>
	</div>
</section>
<style>
	#guess-count::after{
		content: '  guesses left';
	}
</style>
<script>
	$(document).ready(function(){
		$('#guess-count').css({
			'font-size': '12px',
			'text-transform': 'uppercase',
			'font-weight': '700',
		});
	});
	$(document).ready(function(){
		$('#log').css({
			'height': '150px',
			'max-height': '150px',
			'overflow-y': 'scroll',
			'font-size': '12px',
			'font-family': 'monospace',
		});
	});
</script>
<script type="module">
	import * as x from '/js/functions/functions.js';
	window.onload = () => {

		const get = (id) => {return document.getElementById(id)};
		const newRandom = () => Math.round(Math.random() * 100);
		const changeProgress = (value) => {
			const PB = get('progress-bar');
			PB.style.width = value + '%';
			PB.setAttribute('aria-valuenow', value);
			if (value === 100){
				PB.setAttribute('class', 'progress-bar progress-bar-striped progress-bar-animated bg-danger');
			} else PB.setAttribute('class', 'progress-bar progress-bar-striped progress-bar-animated');
		};

		let guesses = 0;
		let wins = 0, losses = 0;
		let randomNumber = newRandom();
		x.cout('Initial random number: ' + randomNumber, 'primary');

		const gameOver = () => {
			TEXTAREA_LOG.innerHTML = '<p class="font-weight-bold text-danger">GAME OVER: You Lost!<p>' + TEXTAREA_LOG.innerHTML;
			TEXTAREA_LOG.setAttribute('class', 'p-4 border rounded text-white');
			INPUT_NUMBER.value = '';
			BUTTON_SUBMIT.disabled = true;
			x.cout('GAME OVER', 'danger');
			TEXT_LOSS_COUNT.innerText = (++losses).toString();
			BUTTON_LOSS_COUNT.setAttribute('class', 'btn btn-danger m-1');
		};

		const INPUT_NUMBER = get('number');
		const BUTTON_SUBMIT = get('btn-submit');
		const BUTTON_RESET = get('btn-reset');
		const DIV_ALERT = get('info');
		const TEXTAREA_LOG = get('log');
		const BUTTON_WIN_COUNT = get('btn-win-count');
		const TEXT_WIN_COUNT = get('txt-win-count');
		const BUTTON_LOSS_COUNT = get('btn-loss-count');
		const TEXT_LOSS_COUNT = get('txt-loss-count');
		const MAX_GUESSES = 7;

		function ev_button_submit_onclick(e){
			if (guesses <= MAX_GUESSES){
				const guess = parseInt(INPUT_NUMBER.value);
				if (guess < 100 && guess > 0){
					guesses += 1;
					updateGameLog(guess, randomNumber);
					changeProgress(guesses/MAX_GUESSES*100);
					x.cout('Guess nr. ' + guesses + ': ' + guess + ' | Correct answer: ' + randomNumber);
					get('guess-count').innerText = (MAX_GUESSES - guesses).toString();
					if (MAX_GUESSES === guesses){
						changeProgress(guesses/MAX_GUESSES*100);
						get('guess-count').innerText = (MAX_GUESSES - guesses).toString();
						gameOver();
					}
				} else {
					TEXTAREA_LOG.innerHTML = '<p class="text-secondary m-0">Invalid input value. The input value should be between 1 and 99</p>' + TEXTAREA_LOG.innerHTML;
				}
			} else {
				gameOver();
			}
			INPUT_NUMBER.value = '';
		}

		function ev_button_reset_onclick(e){
			randomNumber = newRandom();
			x.cout('RESET GAME', 'warning');
			x.cout('New random number: ' + randomNumber, 'success');
			TEXTAREA_LOG.innerText = '';
			TEXTAREA_LOG.setAttribute('class', 'bg-light p-4 border rounded');
			INPUT_NUMBER.value = '';
			BUTTON_SUBMIT.disabled = false;
			changeProgress(0);
			get('guess-count').innerText = MAX_GUESSES.toString();
			guesses = 0;
		}

		function updateGameLog(answer, correctAnswer){
			if (answer === correctAnswer){
				TEXTAREA_LOG.innerHTML = '<p class="font-weight-bold m-0 text-success">[CORRECT]: ' + answer + ' is the correct answer!</p>' + TEXTAREA_LOG.innerHTML;
				randomNumber = newRandom();
				BUTTON_SUBMIT.disabled = true;
				TEXT_WIN_COUNT.innerText = (++wins).toString();
				BUTTON_WIN_COUNT.setAttribute('class', 'btn btn-success m-1');
				x.cout('YOU WON!', 'success');
			}
			else {
				TEXTAREA_LOG.innerHTML =
					'<p class="text-danger m-0"> #' + guesses + ' [WRONG]: ' + answer +
					'. Too ' + ((answer < correctAnswer) ? 'low.' : 'high.') +
					'</p>' + TEXTAREA_LOG.innerHTML;
			}
		}

		BUTTON_SUBMIT.addEventListener('click', ev_button_submit_onclick);
		BUTTON_RESET.addEventListener('click', ev_button_reset_onclick);
	};
</script>